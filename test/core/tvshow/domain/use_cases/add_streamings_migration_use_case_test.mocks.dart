// Mocks generated by Mockito 5.1.0 from annotations
// in tv_randshow/test/core/tvshow/domain/use_cases/add_streamings_migration_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_randshow/core/models/tvshow_details.dart' as _i4;
import 'package:tv_randshow/core/services/databases/i_database_service.dart'
    as _i2;
import 'package:tv_randshow/core/streaming/domain/models/streaming.dart' as _i6;
import 'package:tv_randshow/core/streaming/domain/models/streaming_search.dart'
    as _i7;
import 'package:tv_randshow/core/streaming/domain/use_cases/get_tvshow_streamings_use_case.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IDatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDatabaseService extends _i1.Mock implements _i2.IDatabaseService {
  MockIDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveTvshow(_i4.TvshowDetails? tvshowDetails) =>
      (super.noSuchMethod(Invocation.method(#saveTvshow, [tvshowDetails]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> saveStreamings(_i4.TvshowDetails? tvshowDetails) =>
      (super.noSuchMethod(Invocation.method(#saveStreamings, [tvshowDetails]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.TvshowDetails>> getTvshows() =>
      (super.noSuchMethod(Invocation.method(#getTvshows, []),
              returnValue:
                  Future<List<_i4.TvshowDetails>>.value(<_i4.TvshowDetails>[]))
          as _i3.Future<List<_i4.TvshowDetails>>);
  @override
  _i3.Future<bool> deleteTvshow(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteTvshow, [id]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [GetTvshowStreamingsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvshowStreamingsUseCase extends _i1.Mock
    implements _i5.GetTvshowStreamingsUseCase {
  MockGetTvshowStreamingsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.StreamingDetail>> call(
          _i7.StreamingSearch? streamingSearch) =>
      (super.noSuchMethod(Invocation.method(#call, [streamingSearch]),
              returnValue: Future<List<_i6.StreamingDetail>>.value(
                  <_i6.StreamingDetail>[]))
          as _i3.Future<List<_i6.StreamingDetail>>);
}
